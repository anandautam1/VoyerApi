import requests
from django.conf import settings
from functools import reduce


def getLatestJobInfo(job):
    """
    Retrieve the information for a given project within jenkins
    :param job:
    :return:
    """
    return requests.get("{}/job/{}/api/json".format(settings.JENKINS['BASE_URL'], job),
                        auth=(settings.JENKINS['USERNAME'], settings.JENKINS['PASSWORD']))

def getLastBuild(job):
    """
    Start the jenkins build process for a given job
    :param job: the name of the job/project within jenkins
    :return:
    """
    try:
        response = requests.get("{}/job/{}/lastBuild/api/json".format(settings.JENKINS['BASE_URL'], job),
                         auth=(settings.JENKINS['USERNAME'], settings.JENKINS['PASSWORD'])).json()
        parameters = {}
        # print (response)
        for parameter in response['actions'][0]['parameters']:
            parameters[parameter['name']] = parameter['value']
        return {
            'number': response['number'],
            'parameters': parameters
                }
    except:
        return None

def getLastBuildNumber(job):
    """
    Start the jenkins build process for a given job
    :param job: the name of the job/project within jenkins
    :return:
    """
    try:
        response = requests.get("{}/job/{}/lastBuild/api/json".format(settings.JENKINS['BASE_URL'], job),
                         auth=(settings.JENKINS['USERNAME'], settings.JENKINS['PASSWORD'])).json()
        return response['number']
    except:
        return None



def startJob(job):
    """
    Start the jenkins build process for a given job
    :param job: the name of the job/project within jenkins
    :return:
    """
    return requests.post("{}/job/{}/build/api/json?delay=0sec".format(settings.JENKINS['BASE_URL'], job),
                         auth=(settings.JENKINS['USERNAME'], settings.JENKINS['PASSWORD']))


def startJobWithParameters(job, parameters):
    """
    Start the jenkins build process for a given job
    :param job: the name of the job/project within jenkins
    :return:
    """
    parameters_string = "&".join("{}={}".format(key, val) for (key, val) in parameters.items())
    print("JENKINS:startJobWithParameters:parameter_string:{}".format(parameters_string))
    return requests.post("{}/job/{}/buildWithParameters/api/json?delay=0sec&{}".format(settings.JENKINS['BASE_URL'], job, parameters_string),
                         auth=(settings.JENKINS['USERNAME'], settings.JENKINS['PASSWORD']))


def getJobStdout(job, jobNumber):
    """
    Retrieve the latest stdout from the given job
    :param job:
    :return:
    """
    return requests.get("{}/job/{}/{}/consoleText".format(settings.JENKINS['BASE_URL'], job, jobNumber),
                        auth=(settings.JENKINS['USERNAME'], settings.JENKINS['PASSWORD']))


def getJobCompletionContent(job, file):
    """
    Fetch a file from the jenkins build service which has been generated by the build process
    :param job:
    :param file:
    :return:
    """
    return requests.get("{}/job/{}/ws/{}".format(settings.JENKINS['BASE_URL'], job, file),
                        auth=(settings.JENKINS['USERNAME'], settings.JENKINS['PASSWORD']))
